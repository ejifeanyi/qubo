generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String    @id @default(cuid())
  email              String    @unique
  name               String?
  googleId           String?   @unique
  picture            String?
  emailVerified      Boolean   @default(false)
  googleAccessToken  String?   @db.Text
  googleRefreshToken String?   @db.Text
  googleTokenExpiry  DateTime?
  gmailHistoryId     String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  lastLogin          DateTime?
  
  emails             Email[]

  @@map("users")
}

model Email {
  id            String   @id @default(cuid())
  userId        String
  gmailId       String   @unique
  subject       String?
  from          String?
  senderEmail   String?
  senderName    String?
  to            String?
  toEmails      String[]
  cc            String?
  ccEmails      String[]
  bcc           String?
  bccEmails     String[]
  replyTo       String?
  date          DateTime?
  body          String?  @db.Text
  textBody      String?  @db.Text
  htmlBody      String?  @db.Text
  snippet       String?
  threadId      String?
  messageId     String?
  labelIds      String[]
  isRead        Boolean  @default(false)
  isImportant   Boolean  @default(false)
  isStarred     Boolean  @default(false)
  sizeEstimate  Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([date])
  @@index([threadId])
  @@index([senderEmail])
  @@map("emails")
}